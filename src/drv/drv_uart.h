#pragma once


///////////////////////////////////////////////////////////////////////////////

void telemetryInit(uint32_t baudrate);

///////////////////////////////////////////////////////////////////////////////

uint16_t telemetryAvailable(void);

///////////////////////////////////////////////////////////////////////////////

uint8_t telemetryRead(void);

///////////////////////////////////////////////////////////////////////////////

uint8_t telemetryReadPoll(void);

///////////////////////////////////////////////////////////////////////////////

void telemetryWrite(uint8_t ch);

///////////////////////////////////////////////////////////////////////////////

void telemetryPrint(char *str);

///////////////////////////////////////////////////////////////////////////////
// Telemetry Print Formatted - Print formatted string to Telemetry Port
// From Ala42
///////////////////////////////////////////////////////////////////////////////

void telemetryPrintF(const char * fmt, ...);

///////////////////////////////////////////////////////////////////////////////


typedef void (* uartReceiveCallbackPtr)(uint16_t data);
// USART2
void uart2Init(uint32_t speed, uartReceiveCallbackPtr func, bool rxOnly);
void uart2ChangeBaud(uint32_t speed);
bool isUart2TransmitEmpty(void);
void uart2Write(uint8_t ch);

// USART3 (GPS)
void uart3Init(uint32_t speed, uartReceiveCallbackPtr func, bool rxOnly);
void uart3ChangeBaud(uint32_t speed);
bool isUart3TransmitEmpty(void);
void uart3Write(uint8_t ch);
